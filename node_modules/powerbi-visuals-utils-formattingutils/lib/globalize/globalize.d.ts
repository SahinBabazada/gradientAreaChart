export interface GlobalizeCulture {
    name: string;
    calendar: GlobalizeCalendar;
    calendars: CalendarDictionary;
    numberFormat: GlobalizeNumberFormat;
}
export interface GlobalizeCalendar {
    patterns: any;
    firstDay: number;
}
export interface CalendarDictionary {
    [key: string]: GlobalizeCalendar;
}
export interface GlobalizeNumberFormat {
    decimals: number;
    groupSizes: number[];
    negativeInfinity: string;
    positiveInfinity: string;
}
export interface GlobalizeStatic {
    culture(cultureSelector?: string): GlobalizeCulture;
    format(value: any, format: string, culture?: any): any;
    parseInt(value: string, culture?: any): number;
    parseFloat(value: string, culture?: any): number;
    parseDate(value: string, formats: string[], culture?: any): Date;
    cultures: any;
    findClosestCulture(cultureSelector: string): GlobalizeCulture;
}
/*!
 * Globalize
 *
 * http://github.com/jquery/globalize
 *
 * Copyright Software Freedom Conservancy, Inc.
 * Dual licensed under the MIT or GPL Version 2 licenses.
 * http://jquery.org/license
 */
export declare var Globalize: any, regexHex: any, regexInfinity: any, regexParseFloat: any, regexTrim: any, arrayIndexOf: any, endsWith: any, extend: any, isArray: any, isFunction: any, isObject: any, startsWith: any, trim: any, zeroPad: any, appendPreOrPostMatch: any, expandFormat: any, formatDate: any, formatNumber: any, getTokenRegExp: any, getEra: any, getEraYear: any, parseExact: any, parseNegativePattern: any;
